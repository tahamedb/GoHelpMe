// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username      String @unique
  password  String
  createdAt DateTime @default(now())
  avatar String?
  chatsId String[] @db.ObjectId
  chats Chat[] @relation(fields: [chatsId], references: [id])
  volunteerPosts VolunteerPost[]
  savedPosts SavedPost[]
}


model Chat{
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
users User[] @relation(fields: [usersId], references: [id])
    usersId String[] @db.ObjectId

  createdAt DateTime @default(now())
  seenBy String[] @db.ObjectId
  messages Message[] 
  lastMessage String?

}
model Message{
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
text String 
userId String
chat Chat @relation(fields: [chatId], references: [id])
chatId String @db.ObjectId
  createdAt DateTime @default(now())
  seenBy String[] @db.ObjectId

}

model VolunteerPost {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  description      String 
  startDate        DateTime  
  endDate          DateTime?     
  category         String   
  city             String
  country          String
  address          String
  images           String[]     
  latitude         String       
  longitude        String  
  requiredParticipants Int
  participants String[]    
  createdAt        DateTime     @default(now())
  user       User        @relation(fields: [userId], references: [id])
  userId     String      @db.ObjectId
  volunteerPostDetail VolunteerPostDetail?
  savedPosts SavedPost[]
}

model VolunteerPostDetail {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  minAge Int? 
  estimatedTime Int?
  volunteerPost VolunteerPost @relation(fields: [postId], references: [id])
  postId String @unique @db.ObjectId
}

model SavedPost {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  volunteerPost      VolunteerPost     @relation(fields: [postId], references: [id])
  userId    String   @db.ObjectId
  postId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())
  @@unique([userId, postId])
}

enum category {
  community_service
  education
  elderly_care
  animal_welfare
  environment
  healthcare_support
  food_assistance
  home_repair_and_maintenance
  sports
  disability_support
}